{"version":3,"sources":["components/TableRows/TableRows.tsx","components/FilterTextInput/FilterTextInput.tsx","components/NavigationButton/NavigationButton.tsx","components/NavigationInput/NavigationInput.tsx","components/NavigationBar/NavigationBar.tsx","helpers/sort.ts","hooks/useCurrentData.ts","helpers/filter.ts","hooks/usePage.ts","hooks/useLength.ts","hooks/useFrom.ts","hooks/useTo.ts","hooks/usePageLength.ts","hooks/useData.ts","components/TableHeader/images/ascArrow.svg","components/TableHeader/images/descArrow.svg","components/TableHeader/TableHeader.tsx","components/DisplayedText/DisplayedText.tsx","components/Table/Table.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["TableRows","pageData","fieldsNames","classPrefix","rowsClassName","rowClassName","columnClassName","className","map","data","i","name","j","toString","FilterTextInput","text","setFilter","useState","inputValue","setInputValue","filterClassName","inputClassName","inputId","labelClassName","hintClassName","htmlFor","type","id","value","onChange","event","currentTarget","onKeyDown","key","preventDefault","NavigationButton","dataNumber","disabled","data-number","NavigationInput","pageEnter","pagesRange","linkRef","useRef","isEditable","setIsEditable","setValue","buttonClassName","autoFocus","size","page","Number","isNaN","current","click","onBlur","data-testid","onClick","stopPropagation","title","ref","href","style","display","NavigationBar","lastPage","currentPage","setPage","fromPage","Math","max","toPage","min","navigationClassName","navigationButtonClassName","navigationPageInputClassName","navigationDirectionClassName","target","tagName","dataset","number","elements","currentButtonClassName","push","numberedBlock","sort","prevValue","nextValue","useCurrentData","initialData","useReducer","state","action","newState","o","Object","assign","filter","filters","_data","Array","from","row","length","f1","f2","forEach","split","every","word","toLowerCase","includes","values","some","filterData","direction","fieldName","a","b","usePage","allData","maxPageRows","currentData","setCurrentData","appliedSort","setAppliedSort","useLength","setNumber","pageNumber","useFrom","to","useTo","pagesLength","ceil","usePagesLength","slice","useData","nextPageNumber","options","undefined","parsedFilter","v","trim","pair","_extends","arguments","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","points","SvgAscArrow","_ref","svgRef","titleId","props","width","height","fill","stroke","viewBox","xmlns","ForwardRef","SvgDescArrow","TableHeader","setSort","sortedField","setSortedField","sortedDirection","setSortedDirection","headerClassName","targetElement","HTMLButtonElement","formattedName","sortMarker","DisplayedText","userText","Table","startX","textForFilterLabel","textForDataLength","textForFromToDataRows","textForPageNumber","setPageData","formattedFieldsNames","onTouchCancel","e","onTouchStart","targetTouches","clientX","onTouchEnd","console","log","endX","abs","App","setData","isLoading","setIsLoading","useEffect","fetch","process","response","ok","json","getData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5cb8a27c.chunk.js","sourcesContent":["import { TableRow } from '../../types/RecordType';\n\ninterface TableProps {\n    pageData: TableRow[];\n    fieldsNames: string[];\n    filter?: string[][]; // not used yet\n    classPrefix: string;\n}\n\nexport default function TableRows({ pageData, fieldsNames, classPrefix }: TableProps) {\n    const rowsClassName = `${classPrefix}__rows`;\n    const rowClassName = `${classPrefix}__rows__row`;\n    const columnClassName = `${classPrefix}__row__column`;\n\n    return (\n        <div className={rowsClassName}>\n            {pageData.map((data, i) =>\n                <div className={rowClassName} key={`row-${i}`}>\n                    {fieldsNames.map((name, j) =>\n                        <div \n                            className={`${columnClassName} ${typeof data[name] === 'string' ? `${columnClassName}_string` : `${columnClassName}_number`}`}\n                            key={`column-${j}`}>\n                            {data[name]?.toString()}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}","import { FormEvent, useState, KeyboardEvent } from \"react\";\n\ninterface InputProps {\n    text: string | undefined;\n    setFilter: (text: string) => void;\n    classPrefix: string;\n}\n\nexport default function FilterTextInput({ text, setFilter, classPrefix }: InputProps) {\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const filterClassName = `${classPrefix}__filter`;\n    const inputClassName=`${classPrefix}__filter__input`;\n    const inputId = `${classPrefix}FilterInput`;\n    const labelClassName= `${classPrefix}__filter__label`;\n    const hintClassName = `${classPrefix}__filter__hint`;\n\n    function handleInputChange(event: FormEvent<HTMLInputElement>) {\n        setInputValue(event.currentTarget.value);\n        setFilter(event.currentTarget.value);\n    }\n\n    function handleInputKeyDown(event: KeyboardEvent<HTMLInputElement>) {\n        if (event.key === \"Enter\") {\n            event.preventDefault();\n            setFilter(inputValue);\n        }\n    }\n\n    if (!text) {\n        return null;\n    }\n\n    return (\n        <div className={filterClassName}>\n            <label className={labelClassName} htmlFor={inputId}>{text}</label>\n            <input className={inputClassName}\n                type=\"text\"\n                id={inputId}\n                value={inputValue}\n                onChange={handleInputChange}\n                onKeyDown={handleInputKeyDown}\n            />\n            <p className={hintClassName}>Try \"text\" or \"field1:text; field2:text\" to find</p>\n        </div>\n    )\n}","interface ButtonProps {\n    text: string;\n    dataNumber: number;\n    disabled?: boolean;\n    className: string;\n}\n\nexport default function NavigationButton({\n    text, \n    dataNumber, \n    disabled = false, \n    className\n}: ButtonProps) {\n    \n    return (\n        <button className={className}\n            data-number={dataNumber}\n            disabled={disabled}\n        >\n            {text}\n        </button>            \n    )\n}","import { FormEvent, KeyboardEvent, MouseEvent, useRef, useState } from \"react\";\n\ninterface InputProps {\n    pageEnter: (page: number) => void;\n    pagesRange: number[];\n    className: string;\n}\n\nexport default function NavigationInput({ pageEnter, pagesRange, className }: InputProps) {\n    const linkRef = useRef<HTMLAnchorElement>(null);\n    const [isEditable, setIsEditable] = useState(false);\n    const [value, setValue] = useState(\"\"); \n\n    const inputClassName = `${className}__input`;\n    const buttonClassName = `${className}__button`;\n\n    function handleClick(event: MouseEvent<HTMLButtonElement>) {\n        event.stopPropagation();\n        setIsEditable(true);\n    }\n\n    function handleChange(event: FormEvent<HTMLInputElement>) {\n        setValue(event.currentTarget.value);\n    }\n\n    function handleKeyDown(event: KeyboardEvent<HTMLInputElement>) {\n        if (event.key === \"Enter\") {\n            event.preventDefault();\n\n            const page = Number(value);\n            if (!Number.isNaN(page) && pagesRange[0] <= page && page <= pagesRange[1]) {\n                pageEnter(page);\n                setIsEditable(false);\n                setValue(\"\");\n            }\n            if (linkRef.current) {\n                (linkRef.current as HTMLAnchorElement)?.click();\n            }\n        }\n    }\n\n    function handleBlur() {\n        setIsEditable(false);\n    }\n\n    return (\n        <>\n            {isEditable ?\n                <input className={inputClassName} autoFocus={true} size={5}\n                    type=\"text\" \n                    onChange={handleChange}\n                    onKeyDown={handleKeyDown}\n                    onBlur={handleBlur}\n                    value={value}\n                    data-testid={\"pageInput\"}\n                /> :\n                <button className={buttonClassName} onClick={handleClick} title=\"enter page number\">\n                    ...\n                </button>\n            }\n            <a ref={linkRef} href=\"#table-nav\" style={{display: \"none\"}}>link</a>\n        </>\n    )\n}","import { MouseEvent, useRef } from 'react';\nimport NavigationButton from \"../NavigationButton/NavigationButton\";\nimport NavigationInput from '../NavigationInput/NavigationInput';\n\ninterface barProps {\n    lastPage: number,\n    currentPage: number,\n    setPage: (page: number) => void;\n    classPrefix: string;\n}\n\nexport default function NavigationBar({ lastPage, currentPage, setPage, classPrefix }: barProps) {\n    const linkRef = useRef<HTMLAnchorElement>(null);\n\n    const fromPage = Math.max(currentPage - 2, 1);\n    const toPage = Math.min(currentPage + 2, lastPage);\n\n    const navigationClassName = `${classPrefix}__navigation`;\n    const navigationButtonClassName = `${classPrefix}__navigation__numberButton`;\n    const navigationPageInputClassName = `${classPrefix}__navigation__pageInput`;\n    const navigationDirectionClassName = `${classPrefix}__navigation__direction`;\n\n    function handleClick(event: MouseEvent<HTMLDivElement>) {\n        if ((event.target as HTMLElement)?.tagName === \"BUTTON\") {\n            if (linkRef.current) {\n                (linkRef.current as HTMLAnchorElement)?.click();\n            }\n            const page = Number((event.target as HTMLButtonElement).dataset.number);\n            setPage(page);\n        }\n    }\n\n    function firstBlock() {\n        if (fromPage === 1) return null;\n\n        return (\n            <>\n                <NavigationButton \n                    text=\"1\"\n                    dataNumber={1}\n                    className={navigationButtonClassName}\n                />\n                {(fromPage - 1 > 2) && \n                    <NavigationInput \n                        pageEnter={setPage}\n                        pagesRange={[2, fromPage - 1]}\n                        className={navigationPageInputClassName}\n                    />\n                }\n\n                {(fromPage - 1 === 2) &&\n                    <NavigationButton \n                        text=\"2\"\n                        dataNumber={2}\n                        className={navigationButtonClassName}\n                    />\n                }\n            </>\n        )\n    }\n\n    function lastBlock() {\n        if (toPage === lastPage) return null;\n\n        return (\n            <>\n                {(lastPage - toPage > 2) && \n                    <NavigationInput \n                        pageEnter={setPage}\n                        pagesRange={[toPage + 1, lastPage - 1]}\n                        className={navigationPageInputClassName}\n                    />\n                }\n                \n                {(lastPage - toPage === 2) &&\n                    <NavigationButton \n                        text={(lastPage - 1).toString()}\n                        dataNumber={lastPage - 1}\n                        className={navigationButtonClassName}\n                    />\n                }\n\n                <NavigationButton \n                    text={lastPage.toString()}\n                    dataNumber={lastPage}\n                    className={navigationButtonClassName}\n                />\n                \n            </>\n        )\n    }\n\n    function numberedBlock() {\n        let elements: JSX.Element[] = [];\n        for (let page = fromPage; page <= toPage; page++) {\n            const currentButtonClassName = (page === currentPage) ?\n                ` ${navigationButtonClassName}_current`\n                : \"\"; \n            \n            elements.push(\n                <NavigationButton\n                    className={`${navigationButtonClassName}${currentButtonClassName}`}\n                    text={page.toString()}\n                    dataNumber={page}\n                    disabled={page === currentPage}\n                    key={page.toString()}\n                />\n            )\n        }\n\n        return <>{elements}</>;\n    }\n\n    if (lastPage === 0) {\n        return null;\n    }\n    \n    return (\n        <>\n            <a ref={linkRef} href=\"#table-nav\" style={{display: \"none\"}}>link</a>\n            <div className={navigationClassName} onClick={handleClick} id=\"table-nav\">\n                <NavigationButton \n                    text=\"Previous\"\n                    dataNumber={currentPage - 1}\n                    disabled={currentPage === 1}\n                    className={navigationDirectionClassName}\n                />\n\n                {firstBlock()}\n                {numberedBlock()}\n                {lastBlock()}\n\n                <NavigationButton\n                    text=\"Next\"\n                    dataNumber={currentPage + 1}\n                    disabled={currentPage === lastPage}\n                    className={navigationDirectionClassName}\n                />\n            </div>\n        </>\n    );\n}","export function sort(prevValue: string | number, nextValue: string | number) {\n    if (prevValue < nextValue) return -1;\n    if (prevValue > nextValue) return 1;\n    return 0;\n}","import { useReducer } from 'react';\nimport { TableRow } from '../types/RecordType';\nimport { SortOptions } from '../types/Options';\nimport { filterData } from '../helpers/filter';\nimport { sort } from '../helpers/sort';\n\nexport default function useCurrentData(\n    data: TableRow[]\n): [TableRow[], (action: {sort?: SortOptions, filter?: string[][]}) => void] {\n\n    const initialData = data;\n\n    function updateData(state: TableRow[], action: {sort?: SortOptions, filter?: string[][]}) {\n        let newState: TableRow[] = state.map(o => Object.assign({}, o));\n        if (action.filter) {\n            newState = filterData(initialData, action.filter);\n        }\n\n        if (action.sort) {\n            const {direction, fieldName} = action.sort;\n\n            newState.sort((a, b) => \n                direction === \"asc\" ? \n                    sort(a[fieldName], b[fieldName])\n                    : sort(b[fieldName], a[fieldName])\n            );\n        }\n        \n        return newState;\n    }\n\n    const [value, setValue] = useReducer(updateData, data);\n\n    return [value, setValue];\n}","import { TableRow } from \"../types/RecordType\";\n\nexport function filterParser(text: string): string[][] {\n    if (!text) return [];\n    \n    const pairs = text\n        .toLowerCase()\n        .split(/;+/)\n        .map(v => v.trim())\n        .filter(v => v)\n        .map(pair => \n            pair\n                .split(/:+/)\n                .map(v => v.trim())\n        )\n        .filter(a => (a.length === 1 && a[0]) || (a.length > 1 && a[0] && a[1]));\n\n    return pairs;\n}\n\nexport function filterData(data: TableRow[], filters:string[][]) {\n    let _data: TableRow[] = Array.from(data, row => Object.assign({}, row));\n    \n    if (filters.length === 0) return _data;\n    \n    filters\n        .sort((f1: string[], f2: string[]) => f2.length - f1.length)\n        .forEach(filter => {\n            if (filter.length > 1) {\n                _data = _data.filter(row => \n                    filter[1]\n                        .split(/[ \\t]+/)\n                        .every(word => \n                            row[filter[0]] && row[filter[0]].toString().toLowerCase().includes(word)\n                        )\n                )\n            } else if (filter.length === 1) {\n                _data = _data.filter(row => {\n                    const values: (string | number)[] = Object.values(row);\n                    \n                    return filter[0]\n                        .split(/[ \\t]+/)\n                        .every(word =>\n                            values.some(value => value.toString().toLowerCase().includes(word))\n                        );\n                })\n            }\n        });\n\n    return _data;\n}","import { useState } from 'react';\nimport { TableRow } from '../types/RecordType';\nimport { PageOptions, SortOptions } from '../types/Options';\nimport { filterParser } from '../helpers/filter';\n\nimport useCurrentData from './useCurrentData';\nimport useFrom from './useFrom';\nimport useTo from './useTo';\nimport usePagesLength from './usePageLength';\nimport useLength from './useLength';\nimport useData from './useData';\n\nexport default function usePage(allData: TableRow[], maxPageRows: number): [{\n    data: TableRow[],\n    number: number,\n    from: number,\n    to: number,\n    length: number,\n    pagesLength: number\n},\n(options: PageOptions) => void\n] {\n    const [currentData, setCurrentData] = useCurrentData(allData);\n    const [appliedSort, setAppliedSort] = useState<SortOptions | null>(null);\n\n    const length = useLength(currentData);\n    const [number, setNumber] = useState(1);\n\n    const from = useFrom(number, length, maxPageRows);\n    const to = useTo(number, length, maxPageRows);\n    const pagesLength = usePagesLength(length, maxPageRows);\n    const data = useData(currentData, from, to);\n\n    function setPage({nextPageNumber, sort, filter}: PageOptions) {\n        let options: {filter?: string[][], sort?: SortOptions} = {};\n\n        if (sort || filter !== undefined) {\n            if (filter !== undefined) {\n                const parsedFilter = filterParser(filter || \"\");\n                options.filter = parsedFilter;\n\n                if (appliedSort) {\n                    options.sort = appliedSort;\n                }\n            }\n\n            if (sort) {\n                setAppliedSort(sort);\n                options.sort = sort; \n            }\n            setCurrentData(options);\n            setNumber(1);\n\n        } else if (nextPageNumber && nextPageNumber !== number) {\n            setNumber(nextPageNumber);\n        }\n    }\n    \n    return [ { data, number, from, to, length, pagesLength }, setPage ];\n}","import { TableRow } from \"../types/RecordType\";\n\nexport default function useLength(data: TableRow[]) {\n    return data.length;\n}","export default function useFrom(\n    pageNumber: number,\n    length: number,\n    maxPageRows: number\n): number {\n    return Math.min((pageNumber - 1) * maxPageRows + 1, length);\n}","export default function useTo(\n    pageNumber: number,\n    length: number,\n    maxPageRows: number\n): number {\n    return Math.min(pageNumber * maxPageRows, length);\n}","export default function usePagesLength(length: number, maxPageRows: number) {\n    return Math.ceil(length / maxPageRows);\n}","import { TableRow } from '../types/RecordType';\n\nexport default function useData(data: TableRow[], from: number, to: number): TableRow[] {\n    return data.slice(from - 1, to);\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"0,16 5,0 10,16\"\n});\n\nfunction SvgAscArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"tableSortMarker\",\n    width: 10,\n    height: 16,\n    fill: \"none\",\n    stroke: \"black\",\n    viewBox: \"0 0 10 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAscArrow);\nexport default __webpack_public_path__ + \"static/media/ascArrow.c17ea187.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"0,0 5,16 10,0\"\n});\n\nfunction SvgDescArrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    className: \"tableSortMarker\",\n    width: 10,\n    height: 16,\n    fill: \"none\",\n    stroke: \"black\",\n    viewBox: \"0 0 10 16\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDescArrow);\nexport default __webpack_public_path__ + \"static/media/descArrow.c87c1d19.svg\";\nexport { ForwardRef as ReactComponent };","import { MouseEvent, useState } from \"react\";\nimport { SortOptions } from \"../../types/Options\";\n\nimport {ReactComponent as AscArrow} from \"./images/ascArrow.svg\";\nimport {ReactComponent as DescArrow}  from \"./images/descArrow.svg\";\n\ninterface HeaderProps {\n    fieldsNames: string[];\n    setSort: (options: SortOptions) => void;\n    classPrefix: string;\n}\n\nexport default function TableHeader({ fieldsNames, setSort, classPrefix }: HeaderProps) {\n\n    const [sortedField, setSortedField] = useState<string | null>(null);\n    const [sortedDirection, setSortedDirection] = useState<string | null>(null);\n\n    const headerClassName = `${classPrefix}__header`;\n    const columnClassName = `${classPrefix}__header__columnButton`;\n    \n    function handleClick(event: MouseEvent<HTMLDivElement>) {\n        const targetElement = event.target;\n        if (targetElement instanceof HTMLButtonElement) {\n            const fieldName = (targetElement as HTMLButtonElement).value;\n            let direction: \"asc\" | \"desc\" = \"asc\";\n            if (sortedField === fieldName) {\n                direction = sortedDirection === \"asc\" ? \"desc\" : \"asc\";\n                setSortedDirection(direction);\n            } else {\n                setSortedField(fieldName);\n                setSortedDirection(\"asc\");\n            }\n\n            setSort({fieldName, direction});\n        }\n    }\n    \n    return (\n        <div className={headerClassName} onClick={handleClick}>\n            {fieldsNames.map((name, i) => {\n                const formattedName = name.toLowerCase();\n                const sortMarker = \n                    sortedField === formattedName ? (sortedDirection === \"asc\" ? \"^\" : \"v\")\n                    : \"\";\n                return (\n                    <button className={columnClassName} key={i} value={formattedName}>\n                        {name}\n                        {sortMarker === \"^\" && <AscArrow />}\n                        {sortMarker === \"v\" && <DescArrow />}\n                    </button>\n                );\n            })}\n        </div>\n    );\n}","interface TextProps {\n    userText: string | undefined;\n    text: string;\n    className: string;\n}\n\nexport default function DisplayedText({ userText, text, className }: TextProps) {\n    return (\n        <>\n            {userText && \n                <div className={className}>\n                    {userText} {text}\n                </div>\n            }\n        </>\n    )\n}","import { TouchEvent } from 'react';\nimport TableRows from \"../TableRows/TableRows\";\nimport FilterTextInput from \"../FilterTextInput/FilterTextInput\";\nimport NavigationBar from \"../NavigationBar/NavigationBar\";\n\nimport usePage from \"../../hooks/usePage\";\nimport TableHeader from \"../TableHeader/TableHeader\";\nimport DisplayedText from \"../DisplayedText/DisplayedText\";\nimport { TableRow } from '../../types/RecordType';\n\ninterface TableProps {\n    data: TableRow[];\n    fieldsNames: string[];\n    maxPageRows?: number;\n    className?: string;\n\n    textForFilterLabel?: string; \n\n    textForDataLength?: string; // ${text} ${length}\n    textForFromToDataRows?: string; // ${text} ${from} - ${to}\n    textForPageNumber?: string; // ${text} ${pageNumber}\n}\n\nexport default function Table({\n    data,\n    fieldsNames,\n    maxPageRows = 50,\n    className = \"table\",\n    textForFilterLabel,\n    textForDataLength,\n    textForFromToDataRows,\n    textForPageNumber\n}: TableProps) {\n\n    const [pageData, setPageData] = usePage(data, maxPageRows);\n    const formattedFieldsNames = fieldsNames.map(name => name.toLowerCase());\n\n    let startX: number | null;\n\n    function handleTouchStart(event: TouchEvent) {\n        if (event.targetTouches.length > 1) {\n            startX = null;\n        }\n        else if (event.targetTouches.length === 1) {\n            startX = event.targetTouches[0].clientX;\n        }\n    }\n\n    function handleTouchEnd(event: TouchEvent) {\n        const MIN_DISTANCE = 50;\n\n        console.log(\"touch end\", startX);\n        \n        if (startX) {\n            const endX = event.targetTouches[0].clientX;\n            \n            if (Math.abs(endX - startX) > MIN_DISTANCE) {\n                if (startX < endX && pageData.number > 1) {\n                    setPageData({nextPageNumber: pageData.number - 1});\n                }\n                else if (startX > endX && pageData.number < pageData.pagesLength) {\n                    setPageData({nextPageNumber: pageData.number + 1});\n                }\n            }  \n        }\n\n        startX = null;\n    }\n\n    function handleTouchCancel(e: TouchEvent) {\n        startX = null;\n    }\n\n    return (\n        <div className={className}\n            onTouchCancel={handleTouchCancel}\n            onTouchStart={handleTouchStart}\n            onTouchEnd={handleTouchEnd}\n        >\n\n            <FilterTextInput\n                text={textForFilterLabel}\n                setFilter={text => setPageData({filter: text})}\n                classPrefix={className}\n            />\n\n            <DisplayedText \n                className={`${className}__lengthText`}\n                userText={textForDataLength}\n                text={pageData.length.toString()}\n             />\n            \n            <DisplayedText\n                className={`${className}__rangeText`}\n                userText={textForFromToDataRows}\n                text={`(${pageData.from} - ${pageData.to})`}\n            />\n\n            <DisplayedText\n                className={`${className}__pageNumberText`}\n                userText={textForPageNumber}\n                text={pageData.number.toString()}\n            />\n            \n            <TableHeader\n                fieldsNames={fieldsNames}\n                setSort={(options) => setPageData({sort: options})}\n                classPrefix={className}\n            />\n\n            <TableRows \n                pageData={pageData.data}\n                fieldsNames={formattedFieldsNames}\n                classPrefix={className}\n            />\n\n            <NavigationBar \n                currentPage={pageData.number} \n                lastPage={pageData.pagesLength}\n                setPage={(page) => setPageData({nextPageNumber: page})}\n                classPrefix={className}\n            />\n        </div>\n    );\n}","import { useState, useEffect } from 'react';\nimport Table from \"./components/Table/Table\";\n\nimport './css/table.css';\n\ninterface TableRow {\n    [name: string]: string | number\n}\n\nfunction App() {\n\n    const [data, setData] = useState<TableRow[]>([]);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const fieldsNames = [\"Title\", \"Rating\", \"Year\", \"Duration\", \"Genres\"];\n\n    useEffect(() => {\n        async function getData(): Promise<void> {\n            setIsLoading(true);\n            \n            const response = await fetch(`${process.env.PUBLIC_URL}/data/rating_records.json`);\n            if (response.ok) {\n                setData(await response.json());\n            } else {\n                console.log(\"Could not load data\");\n            }\n\n            setIsLoading(false);\n        }\n\n        getData();\n    }, []);\n\n    if (isLoading) return <div>Loading data...</div>\n\n    return (\n        <div className=\"App\">\n            <Table \n                data={data}\n                fieldsNames={fieldsNames}\n                maxPageRows={50}\n\n                textForDataLength=\"Records found:\"\n                textForFilterLabel=\"Filter:\"\n            />\n        </div>\n    );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}